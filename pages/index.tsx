import { dehydrate } from 'react-query'
import { GetAuthorDocument, useGetAuthorQuery } from '@gTypes/graphql-generated'
import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { serverSideQuery } from '@graphqlServer/serverSideQuery'
import Link from 'next/link'

const Home: NextPage = () => {
	const { data, isLoading } = useGetAuthorQuery({ id: "752" })

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<h2>This page was rendered using SSG</h2>
				<p>Look in <code>getStaticProps</code> and change the <code>id</code> of the query to play with the cache</p>
				<p>{"Fetched author name: "}<code>{isLoading ? "...loading" : data?.getAuthor.name}</code></p>
				<p><Link href="/ssr">Try a SSR page</Link></p>
			</main>



		</div>
	)
}

export const getStaticProps: GetStaticProps = async (context) => {
	const start = performance.now()
	const res = await serverSideQuery({ query: GetAuthorDocument, variables: { id: "752" }, keyFn: useGetAuthorQuery.getKey })
	const end = performance.now()

	console.log(`Call to getStaticProps using serverSideQuery took ${end - start} milliseconds`)
	return {
		props: {
			dehydratedState: dehydrate(res.client)
		}
	}
}

export default Home
